version: 2.1

parameters:
  pre-command:
    type: string
    default: "echo 'No pre-command'"
    description: "Command to run before the fix-flaky-tests command"
  post-command:
    type: string
    default: "echo 'No post-command'"
    description: "Command to run after the fix-flaky-tests command"

executors:
  node:
    docker:
      - image: cimg/node:22.15.1
    resource_class: xlarge

commands:
  attach-workspace:
    steps:
      - attach_workspace:
          at: .

jobs:
  generate-claude-md:
    executor: node
    steps:
      - checkout
      - run:
          name: Generate CLAUDE.md
          command: |
            if [ ! -f "CLAUDE.md" ]; then
              npx -y @circleci/agents@latest claude-init
            else
              echo "CLAUDE.md already exists"
            fi
      - run:
          name: Git ignore CLAUDE.md
          command: |
            echo "CLAUDE.md" >> .git/info/exclude
      - persist_to_workspace:
          root: .
          paths:
            - .

  fix-flaky-tests:
    executor: node
    steps:
      - attach-workspace
      - run:
          name: Pre-command
          command: << pipeline.parameters.pre-command >>
      - run:
          name: Fix flaky tests
          command: |
            npx -y @circleci/agents@latest fix-flaky-tests
      - run:
          name: Post-command
          command: |
            # Run the post-command and capture output, always succeed
            set +e  # Don't exit on error
            << pipeline.parameters.post-command >> 2>&1 | tee /tmp/post-command-output.log
            
            # Capture exit code
            EXIT_CODE=${PIPESTATUS[0]}
            
            # Always create structured output file regardless of exit code
            cat > /tmp/post-command-results.json \<<EOF
            {
              "command": "$(printf '%s' "<< pipeline.parameters.post-command >>" | sed 's/\\/\\\\/g; s/"/\\"/g')",
              "exit_code": $EXIT_CODE,
              "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "output_file": "/tmp/post-command-output.log"
            }
            EOF
            
            # Log the result but don't fail the step
            if [ $EXIT_CODE -eq 0 ]; then
              echo "Post-command completed successfully"
            else
              echo "Post-command failed with exit code $EXIT_CODE (this step will still succeed)"
            fi
      - run:
          name: Fix issues from post-command
          command: |
            npx -y @circleci/agents@latest post-command-fix
      - store_artifacts:
          path: /tmp/fix-flaky-tests-execution-output.json
          when: always
      - store_artifacts:
          path: /tmp/post-command-output.log
          when: always
      - store_artifacts:
          path: /tmp/post-command-results.json
          when: always
      - store_artifacts:
          path: /tmp/post-command-fix-execution-output.json
          when: always
      - run:
          name: Git ignore generated artifacts
          command: |
            echo "fix-flaky-tests-execution-output.json" >> .git/info/exclude
      - persist_to_workspace:
          root: .
          paths:
            - .
      - persist_to_workspace:
          root: /tmp
          paths:
            - fix-flaky-tests-execution-output.json

  commit-and-create-pr:
    executor: node
    steps:
      - attach-workspace
      - run:
          name: Commit and Create PR
          command: |
            npx -y @circleci/agents@latest commit-and-create-pr --git-url << pipeline.project.git_url >>
      - store_artifacts:
          path: /tmp/pr-body-generator-messages.json
          when: always

workflows:
  flaky-tests-fixer:
    jobs:
      - generate-claude-md:
          context:
            - demo-flaky-tests-pipeline
      - fix-flaky-tests:
          requires:
            - generate-claude-md
          context:
            - demo-flaky-tests-pipeline
      - commit-and-create-pr:
          requires:
            - fix-flaky-tests
          context:
            - demo-flaky-tests-pipeline
